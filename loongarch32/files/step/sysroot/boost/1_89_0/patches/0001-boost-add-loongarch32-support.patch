From 36cd6e97d8172eb2285340e70f540425880aef09 Mon Sep 17 00:00:00 2001
From: Sun Haiyong <sunhaiyong@zdbr.net>
Date: Fri, 18 Apr 2025 02:03:48 +0000
Subject: [PATCH] boost add loongarch32 support.

---
 libs/context/CMakeLists.txt                   |   4 +-
 libs/context/build/Jamfile.v2                 |  14 +-
 libs/context/doc/architectures.qbk            |   1 +
 .../src/asm/jump_loongarch32_sysv_elf_gas.S   | 122 ++++++++++++++++++
 .../src/asm/make_loongarch32_sysv_elf_gas.S   |  73 +++++++++++
 .../src/asm/ontop_loongarch32_sysv_elf_gas.S  | 119 +++++++++++++++++
 tools/cmake/README.md                         |   2 +-
 7 files changed, 331 insertions(+), 4 deletions(-)
 create mode 100644 libs/context/src/asm/jump_loongarch32_sysv_elf_gas.S
 create mode 100644 libs/context/src/asm/make_loongarch32_sysv_elf_gas.S
 create mode 100644 libs/context/src/asm/ontop_loongarch32_sysv_elf_gas.S

diff --git a/libs/context/CMakeLists.txt b/libs/context/CMakeLists.txt
index 58705376b..00ff72cf1 100644
--- a/libs/context/CMakeLists.txt
+++ b/libs/context/CMakeLists.txt
@@ -50,7 +50,7 @@ unset(_default_abi)
 
 ## Arch-and-model
 
-set(_all_archs arm arm64 loongarch64 mips32 mips64 power riscv64 s390x i386 x86_64 combined)
+set(_all_archs arm arm64 loongarch32 loongarch64 mips32 mips64 power riscv64 s390x i386 x86_64 combined)
 
 # Try at start to auto determine arch from CMake.
 if(CMAKE_SYSTEM_PROCESSOR IN_LIST _all_archs)
@@ -74,7 +74,7 @@ else()
   endif()
 endif()
 
-set(BOOST_CONTEXT_ARCHITECTURE "${_default_arch}" CACHE STRING "Boost.Context architecture (arm, arm64, loongarch64, mips32, mips64, power, riscv64, s390x, i386, x86_64, combined)")
+set(BOOST_CONTEXT_ARCHITECTURE "${_default_arch}" CACHE STRING "Boost.Context architecture (arm, arm64, loongarch32, loongarch64, mips32, mips64, power, riscv64, s390x, i386, x86_64, combined)")
 set_property(CACHE BOOST_CONTEXT_ARCHITECTURE PROPERTY STRINGS ${_all_archs})
 
 unset(_all_archs)
diff --git a/libs/context/build/Jamfile.v2 b/libs/context/build/Jamfile.v2
index 7ff048b12..0fd972007 100644
--- a/libs/context/build/Jamfile.v2
+++ b/libs/context/build/Jamfile.v2
@@ -211,7 +211,7 @@ alias asm_sources
      <toolset>gcc
    ;
 
-# LOONGARCH64
+# LOONGARCH
 # LOONGARCH64/SYSV/ELF
 alias asm_sources
    : asm/make_loongarch64_sysv_elf_gas.S
@@ -224,6 +224,18 @@ alias asm_sources
      <toolset>gcc
    ;
 
+# LOONGARCH32/SYSV/ELF
+alias asm_sources
+   : asm/make_loongarch32_sysv_elf_gas.S
+     asm/jump_loongarch32_sysv_elf_gas.S
+     asm/ontop_loongarch32_sysv_elf_gas.S
+   : <abi>sysv
+     <address-model>32
+     <architecture>loongarch
+     <binary-format>elf
+     <toolset>gcc
+   ;
+
 # MIPS
 # MIPS32/O32/ELF
 alias asm_sources
diff --git a/libs/context/doc/architectures.qbk b/libs/context/doc/architectures.qbk
index b17e1f228..a2b439173 100644
--- a/libs/context/doc/architectures.qbk
+++ b/libs/context/doc/architectures.qbk
@@ -15,6 +15,7 @@ architectures:
     [[arm (aarch32)] [AAPCS|ELF]      [AAPCS|PE] [-]            [AAPCS|MACH-O]]
     [[arm (aarch64)] [AAPCS|ELF]      [-]        [AAPCS|MACH-O] [AAPCS|MACH-O]]
     [[i386]          [SYSV|ELF]       [MS|PE]    [SYSV|MACH-O]  [-]]
+    [[loongarch32]   [SYSV|ELF]       [-]        [-]            [-]]
     [[loongarch64]   [SYSV|ELF]       [-]        [-]            [-]]
     [[mips]          [O32|N64|ELF]    [-]        [-]            [-]]
     [[ppc32]         [SYSV|ELF|XCOFF] [-]        [SYSV|MACH-O]  [-]]
diff --git a/libs/context/src/asm/jump_loongarch32_sysv_elf_gas.S b/libs/context/src/asm/jump_loongarch32_sysv_elf_gas.S
new file mode 100644
index 000000000..6f99e719e
--- /dev/null
+++ b/libs/context/src/asm/jump_loongarch32_sysv_elf_gas.S
@@ -0,0 +1,122 @@
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  |     0     |     8     |    16     |     24    |  *
+ *  -------------------------------------------------  *
+ *  |    FS0    |    FS1    |    FS2    |    FS3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  |     32    |    40     |     48    |     56    |  *
+ *  -------------------------------------------------  *
+ *  |    FS4    |    FS5    |    FS6    |    FS7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  |     64    |    72     |     80    |     88    |  *
+ *  -------------------------------------------------  *
+ *  |    S0     |    S1     |     S2    |     S3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    S4     |    S5     |     S6    |     S7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    S8     |    FP     |     RA    |     PC    |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ * *****************************************************/
+
+.file "jump_loongarch64_sysv_elf_gas.S"
+.text
+.globl jump_fcontext
+.hidden jump_fcontext
+.align 2
+.type jump_fcontext,@function
+jump_fcontext:
+    # reserve space on stack
+    addi.d  $sp, $sp, -160
+
+    # save fs0 - fs7
+    fst.d  $fs0, $sp, 0
+    fst.d  $fs1, $sp, 8
+    fst.d  $fs2, $sp, 16
+    fst.d  $fs3, $sp, 24
+    fst.d  $fs4, $sp, 32
+    fst.d  $fs5, $sp, 40
+    fst.d  $fs6, $sp, 48
+    fst.d  $fs7, $sp, 56
+
+    # save s0 - s8, fp, ra
+    st.d  $s0, $sp, 64
+    st.d  $s1, $sp, 72
+    st.d  $s2, $sp, 80
+    st.d  $s3, $sp, 88
+    st.d  $s4, $sp, 96
+    st.d  $s5, $sp, 104
+    st.d  $s6, $sp, 112
+    st.d  $s7, $sp, 120
+    st.d  $s8, $sp, 128
+    st.d  $fp, $sp, 136
+    st.d  $ra, $sp, 144
+
+    # save RA as PC
+    st.d  $ra, $sp, 152
+
+    # store SP (pointing to context-data) in A2
+    move  $a2, $sp
+
+    # restore SP (pointing to context-data) from A0
+    move  $sp, $a0
+
+    # load fs0 - fs7
+    fld.d  $fs0, $sp, 0
+    fld.d  $fs1, $sp, 8
+    fld.d  $fs2, $sp, 16
+    fld.d  $fs3, $sp, 24
+    fld.d  $fs4, $sp, 32
+    fld.d  $fs5, $sp, 40
+    fld.d  $fs6, $sp, 48
+    fld.d  $fs7, $sp, 56
+
+    #load s0 - s7
+    ld.d  $s0, $sp, 64
+    ld.d  $s1, $sp, 72
+    ld.d  $s2, $sp, 80
+    ld.d  $s3, $sp, 88
+    ld.d  $s4, $sp, 96
+    ld.d  $s5, $sp, 104
+    ld.d  $s6, $sp, 112
+    ld.d  $s7, $sp, 120
+    ld.d  $s8, $sp, 128
+    ld.d  $fp, $sp, 136
+    ld.d  $ra, $sp, 144
+
+    # return transfer_t from jump
+    # pass transfer_t as first arg in context function
+    # a0 == FCTX, a1 == DATA
+    move  $a0, $a2
+
+    # load PC
+    ld.d  $a2, $sp, 152
+
+    # restore stack
+    addi.d  $sp, $sp, 160
+
+    # jump to context
+    jr  $a2
+.size jump_fcontext, .-jump_fcontext
+
+/* Mark that we don't need executable stack.  */
+.section .note.GNU-stack,"",%progbits
diff --git a/libs/context/src/asm/make_loongarch32_sysv_elf_gas.S b/libs/context/src/asm/make_loongarch32_sysv_elf_gas.S
new file mode 100644
index 000000000..a067baded
--- /dev/null
+++ b/libs/context/src/asm/make_loongarch32_sysv_elf_gas.S
@@ -0,0 +1,73 @@
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  |     0     |     8     |    16     |     24    |  *
+ *  -------------------------------------------------  *
+ *  |    FS0    |    FS1    |    FS2    |    FS3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  |     32    |    40     |     48    |     56    |  *
+ *  -------------------------------------------------  *
+ *  |    FS4    |    FS5    |    FS6    |    FS7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  |     64    |    72     |     80    |     88    |  *
+ *  -------------------------------------------------  *
+ *  |    S0     |    S1     |     S2    |     S3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    S4     |    S5     |     S6    |     S7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    S8     |    FP     |     RA    |     PC    |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ * *****************************************************/
+
+.file "make_loongarch64_sysv_elf_gas.S"
+.text
+.globl make_fcontext
+.hidden make_fcontext
+.align 2
+.type make_fcontext,@function
+make_fcontext:
+    # shift address in A0 to lower 16 byte boundary
+    bstrins.d $a0, $zero, 3, 0
+
+    # reserve space for context-data on context-stack
+    addi.d  $a0, $a0, -160
+
+    # third arg of make_fcontext() == address of context-function
+    st.d  $a2, $a0, 152
+
+    # save address of finish as return-address for context-function
+    # will be entered after context-function returns
+    la.local  $a4, finish
+    st.d  $a4, $a0, 144
+
+    # return pointer to context-data
+    jr  $ra
+
+finish:
+    # exit code is zero
+    li.w  $a0, 0
+    # call _exit(0)
+    b  %plt(_exit)
+
+.size make_fcontext, .-make_fcontext
+/* Mark that we don't need executable stack.  */
+.section .note.GNU-stack,"",%progbits
diff --git a/libs/context/src/asm/ontop_loongarch32_sysv_elf_gas.S b/libs/context/src/asm/ontop_loongarch32_sysv_elf_gas.S
new file mode 100644
index 000000000..ed392e8af
--- /dev/null
+++ b/libs/context/src/asm/ontop_loongarch32_sysv_elf_gas.S
@@ -0,0 +1,119 @@
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  |     0     |     8     |    16     |     24    |  *
+ *  -------------------------------------------------  *
+ *  |    FS0    |    FS1    |    FS2    |    FS3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  |     32    |    40     |     48    |     56    |  *
+ *  -------------------------------------------------  *
+ *  |    FS4    |    FS5    |    FS6    |    FS7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  |     64    |    72     |     80    |     88    |  *
+ *  -------------------------------------------------  *
+ *  |    S0     |    S1     |     S2    |     S3    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    S4     |    S5     |     S6    |     S7    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    S8     |    FP     |     RA    |     PC    |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ * *****************************************************/
+
+.file "ontop_loongarch64_sysv_elf_gas.S"
+.text
+.globl ontop_fcontext
+.hidden ontop_fcontext
+.align 2
+.type ontop_fcontext,@function
+ontop_fcontext:
+    # reserve space on stack
+    addi.d  $sp, $sp, -160
+
+    # save fs0 - fs7
+    fst.d  $fs0, $sp, 0
+    fst.d  $fs1, $sp, 8
+    fst.d  $fs2, $sp, 16
+    fst.d  $fs3, $sp, 24
+    fst.d  $fs4, $sp, 32
+    fst.d  $fs5, $sp, 40
+    fst.d  $fs6, $sp, 48
+    fst.d  $fs7, $sp, 56
+
+    # save s0 - s8, fp, ra
+    st.d  $s0, $sp, 64
+    st.d  $s1, $sp, 72
+    st.d  $s2, $sp, 80
+    st.d  $s3, $sp, 88
+    st.d  $s4, $sp, 96
+    st.d  $s5, $sp, 104
+    st.d  $s6, $sp, 112
+    st.d  $s7, $sp, 120
+    st.d  $s8, $sp, 128
+    st.d  $fp, $sp, 136
+    st.d  $ra, $sp, 144
+
+    # save RA as PC
+    st.d  $ra, $sp, 152
+
+    # store SP (pointing to context-data) in A3
+    move  $a3, $sp
+
+    # restore SP (pointing to context-data) from A0
+    move  $sp, $a0
+
+    # load fs0 - fs11
+    fld.d  $fs0, $sp, 0
+    fld.d  $fs1, $sp, 8
+    fld.d  $fs2, $sp, 16
+    fld.d  $fs3, $sp, 24
+    fld.d  $fs4, $sp, 32
+    fld.d  $fs5, $sp, 40
+    fld.d  $fs6, $sp, 48
+    fld.d  $fs7, $sp, 56
+
+    #load s0 - s11, fp, ra
+    ld.d  $s0, $sp, 64
+    ld.d  $s1, $sp, 72
+    ld.d  $s2, $sp, 80
+    ld.d  $s3, $sp, 88
+    ld.d  $s4, $sp, 96
+    ld.d  $s5, $sp, 104
+    ld.d  $s6, $sp, 112
+    ld.d  $s7, $sp, 120
+    ld.d  $s8, $sp, 128
+    ld.d  $fp, $sp, 136
+    ld.d  $ra, $sp, 144
+
+    # return transfer_t from jump
+    # pass transfer_t as first arg in context function
+    # a0 == FCTX, a1 == DATA
+    move  $a0, $a3
+
+    # adjust stack
+    addi.d  $sp, $sp, 160
+
+    # jump to context
+    jr  $a2
+.size ontop_fcontext, .-ontop_fcontext
+
+/* Mark that we don't need executable stack.  */
+.section .note.GNU-stack,"",%progbits
diff --git a/tools/cmake/README.md b/tools/cmake/README.md
index 83cff96f3..c524658ce 100644
--- a/tools/cmake/README.md
+++ b/tools/cmake/README.md
@@ -214,7 +214,7 @@ are given below.
 
 * `BOOST_CONTEXT_ARCHITECTURE`
 
-  Allowed values are `arm`, `arm64`, `loongarch64`, `mips32`, `mips64`,
+  Allowed values are `arm`, `arm64`, `loongarch32`, `loongarch64`, `mips32`, `mips64`,
   `ppc32`, `ppc64`, `riscv64`, `s390x`, `i386`, `x86_64`, `combined`.
   The default is autodetected from the platform.
 
-- 
2.31.1

